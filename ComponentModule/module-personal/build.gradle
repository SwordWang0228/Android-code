if (isRelease) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}

android {
    compileSdkVersion androidId.compileSdkVersion

    defaultConfig {
        if (!isRelease) {
            applicationId appId.personal
        }
        minSdkVersion androidId.minSdkVersion
        targetSdkVersion androidId.targetSdkVersion
        versionCode androidId.versionCode
        versionName androidId.versionName

        //配置组件化标志
        buildConfigField("boolean", "isRelease", String.valueOf(isRelease))

        //在gradle文件中配置选项参数（用于APT传参接收） 必须在defaultConfig节点下
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName().split("-")[1], packageNameForAPT: packageNameForAPT]
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (!isRelease) {
                //如果是组件化模式，需要单独运行时
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //release 时 debug 目录下文件不需要合并到主工程
                    exclude '**/debug/**'
                }
            }
        }
    }

}

dependencies {
    //引入公共基础库
    implementation project(':library-common')
    //注解处理器触发
    annotationProcessor project(':compiler')
}
